Docker
Image:
  List: images
  Create from Dockefile: build -t myImg:t .
  Remove: rmi myImg  
  Remove Dangling: docker image prune
Container:
  List: ps -a  
  Create: run -d -p 4200:4200 myImg:t
    Support: vincenthome/myImg:t
    WSL Mount: -v /c/localdir:/ctnrdir
    Bkgd shell No exit: -d -it <shell> 
  Remove: rm myCtnr 
  Execute Cmd:exec myctnr mycmd myargs
    Existing: -it myctnr <shell> // /bin/bash|ash

  Cntr2Img: commit cntrId myImg //->tag->push
  Copy: cp hostpath myctnr:path // vice versa
Registry:
  login -u nnn -p xxx [server] 
  tag myImg:myT vincenthome/myImg:t 
  push/pull vincenthome/myImg:t

Other list: network/volume ls

logs -f myctnr  // --tail 100 :last 100 lines// -ft  
inspect myctnr//-f {{.NetworkSettings.IPAddress}}' 
history myImg 
Info

.dockerignore
   /node_modules
   
Dockerfile
# Stage 0, "build-stage", based on Node.js, to build and compile the frontend 
FROM tiangolo/node-frontend:10 as build-stage 
WORKDIR /app 
COPY package*.json /app/ 
RUN npm install 
COPY ./ /app/ 
ARG configuration=production 
RUN npm run build -- --output-path=./dist/out --configuration $configuration 

# Stage 1, based on Nginx, to have only the compiled app, ready for production with Nginx 
FROM nginx:1.15 
COPY --from=build-stage /app/dist/out/ /usr/share/nginx/html 
# Copy the default nginx.conf provided by tiangolo/node-frontend 
COPY --from=build-stage /nginx.conf /etc/nginx/conf.d/default.conf 

